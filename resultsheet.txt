***************** fns.js  ******************
inputst = '<input type="text" onkeydown="chkKey(this,event)" onblur="putVal(this)" id="num" />';

function $(id) {return document.getElementById(id);}
function putVal(ibox){
    try {
      r = ibox.parentElement.parentElement.rowIndex;
      c = ibox.parentElement.cellIndex;  
      props = Object.getOwnPropertyNames(students[0]);
//      console.log(props);
      if(c<2){  
        students[r-2][props[c]] = ibox.value;
      } else {
        students[r-2][props[c]].obtMarks = ibox.value;
      }
      ibox.parentElement.innerHTML = ibox.value;
    t.rows[r].cells[6].innerHTML=students[r-2]['total'];
    t.rows[r].cells[7].innerHTML=students[r-2]['result'];
    t.rows[r].cells[8].innerHTML=students[r-2]['percentage'];
    t.rows[r].cells[9].innerHTML=students[r-2]['grade'];
    } catch(e){console.log("err:"+e)};
    
}

function addRow(item){
 let r= t.insertRow();
 props = Object.getOwnPropertyNames(item);
 for(i=0;i<props.length;i++){
     c = r.insertCell();
     if(i>1) {c.innerHTML = item[props[i]].obtMarks;}
     else { c.innerHTML = item[props[i]]; }
     if(i<6){
         addEvent(c);
     }
    }
    {let c=r.insertCell();c.innerHTML=item['total'];}
    {let c=r.insertCell();c.innerHTML=item['result'];}
    {let c= r.insertCell();c.innerHTML=item['percentage'];}
    {let c= r.insertCell();c.innerHTML=item['grade'];}
    {let c= r.insertCell();
     c.innerHTML = "<input type='button' class='delBtn' value='X' onclick='delRow(this)'/>"; 
    }
}

function delRow(btn){
    r = btn.parentElement.parentElement.rowIndex;
    t.deleteRow(r);
    names.splice(r-2,1);
    console.log(names);
}

function mkEditable(col){
    vs = col.offsetWidth + "px";
    n = col.innerHTML
    col.innerHTML = inputst;
    $('num').style.width=vs;
    $('num').value=n;
    $('num').focus();
}
function chkKey(ibox,e){
    let cno= ibox.parentElement.cellIndex;
    let rno = ibox.parentElement.parentElement.rowIndex;
    if(e.key=='Enter'){
        putVal(ibox);
//        console.log(rno+","+cno+","+arrsubs.length);
        if(cno<=arrsubs.length){
            col = t.rows[rno].cells[cno+1];
        } else if(rno<students.length+1){
            col = t.rows[rno+1].cells[0];
        }
        console.log("new col :"+col.cellIndex);
        mkEditable(col);
        e.preventDefault();
    }else if(e.key=='Escape'){
        putVal(ibox);
        if(cno>0){
            col= t.rows[rno].cells[cno-1];
        } else if(rno>2){
            col = t.rows[rno-1].cells[arrsubs.length];
        }
        mkEditable(col);
        e.preventDefault();

    }

}
function addEvent(col) {
col.addEventListener("click",function(){mkEditable(col);});
}
function addName(item) {
r= t.insertRow();
c = r.insertCell();
addEvent(c);
c.innerHTML = item;
subs.forEach(function () {
   c=r.insertCell();
   addEvent(c);
});
r.insertCell();r.insertCell();r.insertCell();r.insertCell();
c= r.insertCell();
c.innerHTML = "<input type='button' class='delBtn' value='X' onclick='delRow(this)'/>"; 

}

************* tabledata.js **************
let names = ['Ram','sham','ramesh','geeta'];
let arrsubs = ['Lang','Maths','Science','So.Sc.'];

class Subject {
    sname;
    mmarks;
    pmarks;
    #marks;
    constructor(sname,mmarks,pmarks,marks=0){
        this.sname=sname;this.mmarks=mmarks;this.pmarks=pmarks;this.#marks=marks;
    }
    set obtMarks(m) {
      let temp= isNaN(m)?0:parseInt(m);
      if(temp<0 || temp>this.mmarks) return;
    this.#marks = temp;
     }
    get obtMarks() {
        return this.#marks;
    }
    passed() { 
        return this.obtMarks>=this.pmarks;
    }
}

class Student {
    rollno;sname;
    lang;maths;sc;soSc;
    constructor(rollno,sname){
        this.rollno = rollno;
        this.sname = sname;
        this.lang = new Subject("Language",100,35);
        this.maths = new Subject("Maths",100,40);
        this.sc = new Subject("Science",100,40);
        this.soSc = new Subject("So.Sc.",100,35);
            }
    passed() {
        return this.lang.passed() && this.maths.passed() && this.sc.passed() && this.soSc.passed();
    }
    get result() {
        if (this.passed()) return "Pass"; else return "Fail";
    }
    get total() { 
        
        return this.lang.obtMarks + this.maths.obtMarks + this.sc.obtMarks + this.soSc.obtMarks;
    }
    get percentage() {
        return this.total/4;
    }
    get grade() {
        let p=this.percentage;
        if(!this.passed()) 
            return "F";
        else if(p<50)
            return "C";
        else if(p<60)
            return "B";
        else if(p<75)
            return "A";
        else 
            return "A+";
    }
}

let students = [];
names.forEach(function (item,index) {
   let stud = new Student(index+101,item);
   students.push(stud);
});
console.log(students);

*************** tableEntry_v2.html ***********************
<!DOCTYPE html>
<html>
<head>
    <style>
        td, th {
            width: 10ch;
            text-align: center;
            font-size: 120%;
        }
        input {
            background-color: aqua;
            font-size: 100%
        }
    </style>
    <script src="tabledata.js"></script>
    <script src="fns.js"></script>
 
</head>
<body>
    <div><input type="button" value="Add Student" onclick="addRow()"/></div>
    <table id="tbl" border="1" style="border-collapse: collapse;">
        <tr>
            <th rowspan="2">Roll.No.</th>
            <th rowspan="2">Name</th>
            <th colspan="4">Subjects==></th>
            <th rowspan="2">Total</th><th rowspan="2">Result</th>
            <th rowspan="2">%age</th><th rowspan="2">Grade</th>
            <th rowspan="2">Delete</th>
        </tr>
    </table>
<script>   
    let t = $("tbl");
    let r= t.insertRow();
    arrsubs.forEach(function (item){
        c=r.insertCell();c.innerHTML=item;
    });
    students.forEach(addRow);

 

</script> 
</body>
</html>
